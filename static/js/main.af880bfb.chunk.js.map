{"version":3,"sources":["lib/env.js","lib/session.js","lib/abi.js","lib/wallet.js","actions/account.js","lib/api.js","actions/markets.js","components/Header/index.js","actions/orderbook.js","actions/config.js","actions/trade.js","lib/utils.js","components/WebsocketConnector/index.js","components/Orderbook/index.js","actions/fee.js","lib/tradeCalculator.js","selectors/account.js","components/Trade/index.js","components/Selector/index.js","components/Wallet/Tokens.js","components/Wallet/Wrap.js","components/Wallet/index.js","components/Orders/OpenOrders.js","components/Orders/Trades.js","components/Orders/index.js","components/Charts/index.js","components/TradeHistory/index.js","components/UnderlineTab/index.js","components/Fold/index.js","App.js","serviceWorker.js","reducers/market.js","reducers/account.js","reducers/config.js","reducers/index.js","index.js"],"names":["_env","process","REACT_APP_API_URL","window","env","API_ADDRESS","WS_ADDRESS","REACT_APP_WS_URL","NODE_URL","REACT_APP_NODE_URL","HYDRO_PROXY_ADDRESS","REACT_APP_HYDRO_PROXY_ADDRESS","HYDRO_TOKEN_ADDRESS","REACT_APP_HYDRO_TOKEN_ADDRESS","WETH_TOKEN_ADDRESS","REACT_APP_WETH_TOKEN_ADDRESS","NETWORK_ID","REACT_APP_NETWORK_ID","saveLoginData","address","hydroAuthentication","localStorage","setItem","concat","JSON","stringify","cleanLoginDate","removeItem","loadAccountHydroAuthentication","loginData","savedData","getItem","parse","e","toLowerCase","abi","constant","inputs","name","outputs","payable","stateMutability","type","getTokenBalance","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","tokenAddress","accountAddress","contract","balance","wrap","_context","prev","next","getContract","balanceOf","sent","abrupt","BigNumber","stop","_x","_x2","apply","this","arguments","getAllowance","_ref2","_callee2","allowance","_context2","_x3","_x4","approve","symbol","action","decimals","_ref9","_callee10","dispatch","getState","state","functionSelector","spender","params","wallet","transactionID","_context10","get64BytesString","length","to","data","value","getSelectedAccountWallet","sendTransaction","alert","watchTransactionStatus","_ref10","_callee9","success","_context9","watchToken","_x17","t0","_x15","_x16","txID","callback","getTransactionStatus","_ref11","_callee11","tx","_context11","getTransactionReceipt","Number","status","setTimeout","string","replace","loginRequest","message","selectedAccount","signature","getSelectedAccount","get","signPersonalMessage","login","loadAccountLockedBalance","payload","res","lockedBalances","api","forEach","x","lockedBalance","updateTokenLockedBalances","keys","key","index","loadTokens","_ref3","_callee3","markets","tokens","promises","i","market","_i","_market","_context3","getIn","toArray","quoteToken","push","loadToken","quoteTokenAddress","quoteTokenDecimals","baseToken","baseTokenAddress","baseTokenDecimals","Promise","all","_x5","_x6","_ref4","_callee4","_yield$Promise$all","_yield$Promise$all2","_context4","slicedToArray","_x7","_x8","loadOrders","_ref5","_callee5","currentMarket","_context5","id","orders","map","format","desc","_x9","_x10","loadTrades","_ref6","_callee6","_context6","trades","_x11","_x12","orderUpdate","json","order","marketID","side","gasFeeAmount","makerFeeRate","takerFeeRate","price","availableAmount","canceledAmount","confirmedAmount","pendingAmount","createdAt","amount","_request","method","url","_getAxiosInstance","_len","args","Array","_key","instance","store","axios","create","headers","Hydro-Authentication","interceptors","response","use","logout","getAxiosInstance","_len2","_key2","delete","_len3","_key3","head","_len4","_key4","post","_len5","_key5","put","_len6","_key6","patch","_len7","_key7","loadTradeHistory","formatMarket","asMakerFeeRate","asTakerFeeRate","marketOrderMaxSlippage","Header","_this$props","props","prevProps","_this$props2","_this$props3","react_default","createElement","className","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","style","maxHeight","overflow","onClick","updateCurrentMarket","data-target","href","target","rel","build","renderAccount","_this$props4","isLoggedIn","isLocked","marginLeft","React","PureComponent","connect","account","initOrderbook","bids","asks","updateOrderbook","setConfigs","configs","trade","orderType","undefined","expires","result","createOrder","buildOrderResponse","orderParams","orderID","orderSignature","placeOrderResponse","slice","repeat","tradeUpdate","marketTrade","sleep","time","r","toUnitAmount","div","Math","pow","WebsocketConnector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sendMessage","socket","readyState","send","preEvents","changeMarket","lastSubscribedChannel","m","channels","logoutLastAccount","lastAccountAddress","changeAccount","disconnectWebsocket","close","connectWebsocket","ReconnectingWebSocket","debug","timeoutInterval","onopen","event","websocketConnected","shift","onclose","onerror","console","log","onmessage","priceLevel","defineProperty","isMarketChange","loggedInChange","accountChange","OrderBook","lastUpdatedAt","forceRenderTimer","_this2","diff","Date","valueOf","shouldRender","forceUpdate","clearInterval","reverse","toString","toFixed","amountDecimals","priceDecimals","aria-hidden","Component","loading","config","theme","hotDiscountRules","loadHotDiscountRules","getHotDiscountRate","hotTokenAmount","_step","_iterator","_createForOfIteratorHelper","s","n","done","rule","limit","discountRate","eq","lte","err","f","stateUtils","getTokensInfo","Map","getTokenInfo","tokenSymbol","getTokenLockedBalance","getTokenAvailableBalance","minus","Trade","renderField","input","label","unit","meta","attrs","objectWithoutProperties","submitFailed","error","assign","interval","setInterval","hotContract","reset","lastPrice","change","updateFees","handleSubmit","total","gasFee","tradeFee","subtotal","Fragment","ref","setRef","onSubmit","submit","Field","autoComplete","component","plus","calculateResult","totalBaseTokens","isMakerFee","hotDiscount","feeRate","dp","ROUND_DOWN","multipliedBy","totalQuoteTokens","estimatedPrice","tradeFeeAfterDiscount","feeRateAfterDiscount","ROUND_UP","max","calculateTrade","ps","PerfectScrollbar","suppressScrollX","maxScrollbarLength","selector","formValueSelector","lastTrade","first","initialValues","totalBase","marketOrderWorstPrice","marketOrderWorstTotalQuote","marketOrderWorstTotalBase","quoteTokenBalance","baseTokenBalance","bestBidPrice","size","bestAskPrice","reduxForm","form","destroyOnUnmount","onSubmitFail","_","stopSubmit","validate","values","_price","_amount","_total","errors","isNaN","lt","minOrderSize","quoteTokenAmount","gt","baseTokenAmount","shouldError","Selector","options","selectedValue","handleClick","option","Tokens","tokensInfo","ethBalance","token","_info$toJS","toJS","isApproved","isTokenApproved","availableBalance","toolTipTitle","data-html","data-placement","title","$","tooltip","checked","onChange","_ref8","_callee8","_context8","_x13","_x14","disable","_ref7","_callee7","_context7","enable","htmlFor","selectedAccountID","WalletReducer","Wrap","setState","wethBalance","isWrap","WETH","wrapETH","valueString","unwrapWETH","OPTIONS","Wallet","components_Selector","renderTabPanel","Wallet_Tokens","Wallet_Wrap","OpenOrders","update","split","Trades","taker","takerSide","Orders","Orders_OpenOrders","Orders_Trades","Charts","tradeChartWrapper","createRef","granularityStr","noData","from","start","end","getTime","loadData","loadRight","granularityIsSame","generateParams","granularityNum","newData","candles","changeState","toConsumableArray","fitLengthToShow","width","current","offsetWidth","ceil","floor","loadLeft","_this3","dist","styles","upColor","downColor","background","clickCallback","handleLoadMore","clickGranularity","bidColor","askColor","rowBackgroundColor","TradeHistory","tradeHistory","colorGreen","join","moment","executedAt","UnderlineTab","container","mounted","underlineClassName","addEventListener","left","selectedIndex","optionsElements","activeItem","children","offsetLeft","underline","Fold","child","_loop","UnderlineTab_UnderlineTab","App","mobileTab","parseInt","initTestBrowserWallet","HydroWallet","setNodeUrl","import","watchWallet","networkId","nodeUrl","defaultWalletType","components_WebsocketConnector","components_Header","padding","getNetworkName","react_responsive_default","minWidth","renderDesktop","maxWidth","renderLaptop","renderTablet","renderMobile","suppressScrollY","content","selectTab","components_Orders","components_Charts","Orderbook","components_TradeHistory","components_Wallet","components_Trade","Fold_Fold","data-fold-item-title","Boolean","location","hostname","match","initialOrderbook","List","initialState","marketStatus","loaded","onlyMarket","searchTerm","orderbook","tickers","isAllTradesLoading","tokenPrices","reverseBigNumberComparator","b","initState","approving","OrderedMap","transactions","initialTokenInfo","rootReducer","combineReducers","setIn","set","t","sort","_action$payload","findIndex","deleteIn","updateIn","list","_Object$keys","k","tokenInfoState","o","ordersPath","_action$payload2","formReducer","__webpack_require__","d","__webpack_exports__","EXPONENTIAL_AT","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af880bfb.chunk.js","sourcesContent":["let _env = process.env;\n\nif (!_env.REACT_APP_API_URL) {\n  _env = window._env;\n}\n\nexport default {\n  API_ADDRESS: _env.REACT_APP_API_URL,\n  WS_ADDRESS: _env.REACT_APP_WS_URL,\n  NODE_URL: _env.REACT_APP_NODE_URL,\n  HYDRO_PROXY_ADDRESS: _env.REACT_APP_HYDRO_PROXY_ADDRESS,\n  HYDRO_TOKEN_ADDRESS: _env.REACT_APP_HYDRO_TOKEN_ADDRESS,\n  WETH_TOKEN_ADDRESS: _env.REACT_APP_WETH_TOKEN_ADDRESS,\n  NETWORK_ID: _env.REACT_APP_NETWORK_ID\n};\n","/**\n * Login Data\n * {\n *   address: \"0x....\",\n *   hydroAuthentication: \"xxx.bbb.ccc\"\n * }\n */\n\nexport const saveLoginData = (address, hydroAuthentication) => {\n  window.localStorage.setItem(`loginData-${address}`, JSON.stringify({ address, hydroAuthentication }));\n};\n\nexport const cleanLoginDate = address => {\n  window.localStorage.removeItem(`loginData-${address}`);\n};\n\nexport const loadAccountHydroAuthentication = address => {\n  const savedData = window.localStorage.getItem(`loginData-${address}`);\n\n  if (!savedData) {\n    return null;\n  }\n\n  let loginData;\n  try {\n    loginData = JSON.parse(savedData);\n  } catch (e) {\n    cleanLoginDate(address);\n    return null;\n  }\n\n  if (loginData.address && loginData.address.toLowerCase() === address.toLowerCase()) {\n    return loginData.hydroAuthentication;\n  }\n\n  return null;\n};\n","export default [\n  {\n    constant: false,\n    inputs: [],\n    name: 'deposit',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'wad',\n        type: 'uint256'\n      }\n    ],\n    name: 'withdraw',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'guy',\n        type: 'address'\n      },\n      {\n        name: 'wad',\n        type: 'uint256'\n      }\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      }\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: 'balance',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      },\n      {\n        name: '_spender',\n        type: 'address'\n      }\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","import BigNumber from 'bignumber.js';\nimport { watchToken } from '../actions/account';\nimport abi from './abi';\nimport env from './env';\nimport { getSelectedAccountWallet, getTransactionReceipt, getContract } from '@gongddex/hydro-sdk-wallet';\nexport let web3, Contract;\n\nexport const getTokenBalance = async (tokenAddress, accountAddress) => {\n  const contract = getContract(tokenAddress, abi);\n  const balance = await contract.balanceOf(accountAddress);\n  return new BigNumber(balance);\n};\n\nexport const getAllowance = async (tokenAddress, accountAddress) => {\n  const contract = getContract(tokenAddress, abi);\n  const allowance = await contract.allowance(accountAddress, env.HYDRO_PROXY_ADDRESS);\n  return new BigNumber(allowance);\n};\n\nexport const wrapETH = amount => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const WETH = state.config.get('WETH');\n    const value = new BigNumber(amount).multipliedBy(Math.pow(10, WETH.decimals)).toString();\n\n    let params = {\n      to: WETH.address,\n      data: '0xd0e30db0',\n      value\n    };\n\n    try {\n      const wallet = getSelectedAccountWallet(state);\n      const transactionID = await wallet.sendTransaction(params);\n\n      alert(`Wrap ETH request submitted`);\n      watchTransactionStatus(transactionID, async success => {\n        if (success) {\n          dispatch(watchToken(WETH.address, WETH.symbol, WETH.decimals));\n          alert('Wrap ETH Successfully');\n        } else {\n          alert('Wrap ETH Failed');\n        }\n      });\n      return transactionID;\n    } catch (e) {\n      alert(e);\n    }\n    return null;\n  };\n};\n\nexport const unwrapWETH = amount => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const WETH = state.config.get('WETH');\n    const value = new BigNumber(amount).multipliedBy(Math.pow(10, WETH.decimals)).toString(16);\n    const wallet = getSelectedAccountWallet(state);\n    const functionSelector = '2e1a7d4d';\n    const valueString = get64BytesString(value);\n\n    let params = {\n      to: WETH.address,\n      data: `0x${functionSelector}${valueString}`,\n      value: 0\n    };\n\n    try {\n      const transactionID = await wallet.sendTransaction(params);\n\n      alert(`Unwrap WETH request submitted`);\n      watchTransactionStatus(transactionID, async success => {\n        if (success) {\n          dispatch(watchToken(WETH.address, WETH.symbol, WETH.decimals));\n          alert('Wrap ETH Successfully');\n        } else {\n          alert('Wrap ETH Failed');\n        }\n      });\n      return transactionID;\n    } catch (e) {\n      alert(e);\n    }\n    return null;\n  };\n};\n\nexport const enable = (address, symbol, decimals) => {\n  return async (dispatch, getState) => {\n    let transactionID = await dispatch(\n      approve(address, symbol, 'f000000000000000000000000000000000000000000000000000000000000000', 'Enable', decimals)\n    );\n    return transactionID;\n  };\n};\n\nexport const disable = (address, symbol, decimals) => {\n  return async (dispatch, getState) => {\n    let transactionID = await dispatch(\n      approve(address, symbol, '0000000000000000000000000000000000000000000000000000000000000000', 'Disable', decimals)\n    );\n    return transactionID;\n  };\n};\n\nexport const approve = (tokenAddress, symbol, allowance, action, decimals) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const functionSelector = '095ea7b3';\n    let spender = get64BytesString(env.HYDRO_PROXY_ADDRESS);\n    if (spender.length !== 64) {\n      return null;\n    }\n\n    let params = {\n      to: tokenAddress,\n      data: `0x${functionSelector}${spender}${allowance}`,\n      value: 0\n    };\n\n    try {\n      const wallet = getSelectedAccountWallet(state);\n      const transactionID = await wallet.sendTransaction(params);\n\n      alert(`${action} ${symbol} request submitted`);\n      watchTransactionStatus(transactionID, async success => {\n        if (success) {\n          dispatch(watchToken(tokenAddress, symbol, decimals));\n          alert(`${action} ${symbol} Successfully`);\n        } else {\n          alert(`${action} ${symbol} Failed`);\n        }\n      });\n      return transactionID;\n    } catch (e) {\n      alert(e);\n    }\n    return null;\n  };\n};\n\nconst watchTransactionStatus = (txID, callback) => {\n  const getTransactionStatus = async () => {\n    const tx = await getTransactionReceipt(txID);\n    if (!tx) {\n      window.setTimeout(() => getTransactionStatus(txID), 3000);\n    } else if (callback) {\n      callback(Number(tx.status) === 1);\n    } else {\n      alert('success');\n    }\n  };\n  window.setTimeout(() => getTransactionStatus(txID), 3000);\n};\n\nconst get64BytesString = string => {\n  string = string.replace('0x', '');\n  while (string.length < 64) {\n    string = '0'.concat(string);\n  }\n  return string;\n};\n","import { getAllowance, getTokenBalance } from '../lib/wallet';\nimport { saveLoginData } from '../lib/session';\nimport BigNumber from 'bignumber.js';\nimport api from '../lib/api';\nimport { getSelectedAccount, getSelectedAccountWallet } from '@gongddex/hydro-sdk-wallet';\n\n// request ddex private auth token\nexport const loginRequest = () => {\n  return async (dispatch, getState) => {\n    const message = 'HYDRO-AUTHENTICATION';\n    const state = getState();\n    const selectedAccount = getSelectedAccount(state);\n    const address = selectedAccount ? selectedAccount.get('address') : null;\n    const wallet = getSelectedAccountWallet(state);\n    if (!wallet) {\n      return;\n    }\n    const signature = await wallet.signPersonalMessage(message);\n    if (!signature) {\n      return;\n    }\n\n    const hydroAuthentication = address + '#' + message + '#' + signature;\n    saveLoginData(address, hydroAuthentication);\n    return dispatch(login(address, hydroAuthentication));\n  };\n};\n\nexport const login = address => {\n  return (dispatch, getState) => {\n    dispatch(loadAccountLockedBalance());\n    dispatch({ type: 'LOGIN', payload: { address } });\n  };\n};\n\nexport const logout = address => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', payload: { address } });\n  };\n};\n\n// 获取账号锁定余额(订单中的余额)\nexport const loadAccountLockedBalance = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const selectedAccount = getSelectedAccount(state);\n    const accountAddress = selectedAccount ? selectedAccount.get('address') : null;\n    if (!accountAddress) {\n      return;\n    }\n\n    const res = await api.get('/account/lockedBalances');\n    const lockedBalances = {};\n    if (res.data.status === 0) {\n      res.data.data.lockedBalances.forEach(x => {\n        lockedBalances[x.symbol] = x.lockedBalance;\n      });\n      dispatch(updateTokenLockedBalances(lockedBalances));\n    }\n  };\n};\n\nexport const updateTokenLockedBalances = lockedBalances => {\n  return (dispatch, getState) => {\n    const selectedAccount = getSelectedAccount(getState());\n    const accountAddress = selectedAccount ? selectedAccount.get('address') : null;\n    if (!accountAddress) {\n      return;\n    }\n\n    Object.keys(lockedBalances).forEach((key, index) => {\n      lockedBalances[key] = new BigNumber(lockedBalances[key]);\n    });\n\n    return dispatch({\n      type: 'UPDATE_TOKEN_LOCKED_BALANCES',\n      payload: { lockedBalances, accountAddress }\n    });\n  };\n};\n\n// load ERC20 tokens balance and allowance\nexport const loadTokens = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const selectedAccount = getSelectedAccount(state);\n    const accountAddress = selectedAccount ? selectedAccount.get('address') : null;\n\n    if (!accountAddress) {\n      return;\n    }\n\n    const markets = state.market.getIn(['markets', 'data']).toArray();\n    let tokens = {};\n    let promises = [];\n\n    // load quote tokens first\n    for (let i = 0; i < markets.length; i++) {\n      const market = markets[i];\n      if (tokens[market.quoteToken]) {\n        continue;\n      }\n      tokens[market.quoteToken] = true;\n      promises.push(dispatch(loadToken(market.quoteTokenAddress, market.quoteToken, market.quoteTokenDecimals)));\n    }\n\n    // then base tokens\n    for (let i = 0; i < markets.length; i++) {\n      const market = markets[i];\n      if (tokens[market.baseToken]) {\n        continue;\n      }\n      tokens[market.baseToken] = true;\n      promises.push(dispatch(loadToken(market.baseTokenAddress, market.baseToken, market.baseTokenDecimals)));\n    }\n\n    await Promise.all(promises);\n  };\n};\n\n// load ERC20 token 10 times\nexport const watchToken = (tokenAddress, symbol, decimals) => {\n  return dispatch => {\n    for (let i = 0; i < 10; i++) {\n      setTimeout(() => dispatch(loadToken(tokenAddress, symbol, decimals)), 3000 * i);\n    }\n  };\n};\n\nexport const loadToken = (tokenAddress, symbol, decimals) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const selectedAccount = getSelectedAccount(state);\n    const accountAddress = selectedAccount ? selectedAccount.get('address') : null;\n    if (!accountAddress) {\n      return;\n    }\n\n    const [balance, allowance] = await Promise.all([\n      getTokenBalance(tokenAddress, accountAddress),\n      getAllowance(tokenAddress, accountAddress)\n    ]);\n\n    return dispatch({\n      type: 'UPDATE_TOKEN_INFO',\n      payload: {\n        tokenAddress,\n        accountAddress,\n        symbol,\n        balance,\n        allowance,\n        decimals\n      }\n    });\n  };\n};\n\n// load all my pending orders\nexport const loadOrders = () => {\n  return async (dispatch, getState) => {\n    const currentMarket = getState().market.getIn(['markets', 'currentMarket']);\n    const res = await api.get(`/orders?marketID=${currentMarket.id}`);\n\n    if (res.data.status === 0) {\n      const data = res.data.data;\n      return dispatch({\n        type: 'LOAD_ORDERS',\n        payload: {\n          orders: data ? data.orders.map(format) : []\n        }\n      });\n    } else {\n      alert(res.data.desc);\n    }\n  };\n};\n\n// load all my trades\nexport const loadTrades = () => {\n  return async (dispatch, getState) => {\n    const currentMarket = getState().market.getIn(['markets', 'currentMarket']);\n    const res = await api.get(`/markets/${currentMarket.id}/trades/mine`);\n\n    if (res.data.status === 0) {\n      const data = res.data.data;\n      return dispatch({\n        type: 'LOAD_TRADES',\n        payload: {\n          trades: data ? data.trades : []\n        }\n      });\n    } else {\n      alert(res.data.desc);\n    }\n  };\n};\n\nexport const orderUpdate = json => {\n  return {\n    type: 'ORDER_UPDATE',\n    payload: { order: format(json) }\n  };\n};\n\nexport const cancelOrder = id => {\n  return async (dispatch, getState) => {\n    const res = await api.delete(`/orders/${id}`);\n\n    if (res.data.status === 0) {\n      alert('Successfully cancelled order');\n      dispatch({\n        type: 'CANCEL_ORDER',\n        payload: { id }\n      });\n    } else {\n      alert(res.data.desc);\n    }\n  };\n};\n\n// Number or String format to Bignumber\nconst format = json => {\n  return {\n    id: json.id,\n    marketID: json.marketID,\n    side: json.side,\n    status: json.status,\n    gasFeeAmount: new BigNumber(json.gasFeeAmount || 0),\n    makerFeeRate: new BigNumber(json.makerFeeRate || 0),\n    takerFeeRate: new BigNumber(json.takerFeeRate || 0),\n    price: new BigNumber(json.price),\n    availableAmount: new BigNumber(json.availableAmount),\n    canceledAmount: new BigNumber(json.canceledAmount),\n    confirmedAmount: new BigNumber(json.confirmedAmount),\n    pendingAmount: new BigNumber(json.pendingAmount),\n    createdAt: json.createdAt,\n    json: json.json,\n    amount: new BigNumber(json.amount)\n  };\n};\n","import axios from 'axios';\nimport env from './env';\nimport { store } from '../index';\nimport { cleanLoginDate, loadAccountHydroAuthentication } from './session';\nimport { logout } from '../actions/account';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\n\nconst getAxiosInstance = () => {\n  const state = store.getState();\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  const hydroAuthentication = loadAccountHydroAuthentication(address);\n  let instance;\n\n  if (hydroAuthentication) {\n    instance = axios.create({\n      headers: {\n        'Hydro-Authentication': hydroAuthentication\n      }\n    });\n  } else {\n    instance = axios;\n  }\n\n  instance.interceptors.response.use(function(response) {\n    if (response.data && response.data.status === -11) {\n      if (address) {\n        store.dispatch(logout(address));\n        cleanLoginDate(address);\n      }\n    }\n    return response;\n  });\n\n  return instance;\n};\n\nconst _request = (method, url, ...args) => {\n  return getAxiosInstance()[method](`${env.API_ADDRESS}${url}`, ...args);\n};\n\nconst api = {\n  get: (url, ...args) => _request('get', url, ...args),\n  delete: (url, ...args) => _request('delete', url, ...args),\n  head: (url, ...args) => _request('head', url, ...args),\n  post: (url, ...args) => _request('post', url, ...args),\n  put: (url, ...args) => _request('put', url, ...args),\n  patch: (url, ...args) => _request('patch', url, ...args)\n};\n\nexport default api;\n","import BigNumber from 'bignumber.js';\nimport api from '../lib/api';\n\nexport const updateCurrentMarket = currentMarket => {\n  return async dispatch => {\n    return dispatch({\n      type: 'UPDATE_CURRENT_MARKET',\n      payload: { currentMarket }\n    });\n  };\n};\n\nexport const loadMarkets = () => {\n  return async (dispatch, getState) => {\n    const res = await api.get(`/markets`);\n    if (res.data.status === 0) {\n      const markets = res.data.data.markets;\n      markets.forEach(formatMarket);\n      return dispatch({\n        type: 'LOAD_MARKETS',\n        payload: { markets }\n      });\n    }\n  };\n};\n\n// load current market trade history\nexport const loadTradeHistory = marketID => {\n  return async (dispatch, getState) => {\n    const res = await api.get(`/markets/${marketID}/trades`);\n    const currentMarket = getState().market.getIn(['markets', 'currentMarket']);\n    if (currentMarket.id === marketID) {\n      return dispatch({\n        type: 'LOAD_TRADE_HISTORY',\n        payload: res.data.data.trades\n      });\n    }\n  };\n};\n\nconst formatMarket = market => {\n  market.gasFeeAmount = new BigNumber(market.gasFeeAmount);\n  market.asMakerFeeRate = new BigNumber(market.asMakerFeeRate);\n  market.asTakerFeeRate = new BigNumber(market.asTakerFeeRate);\n  market.marketOrderMaxSlippage = new BigNumber(market.marketOrderMaxSlippage);\n};\n","import React from 'react';\nimport { loginRequest, login } from '../../actions/account';\nimport { updateCurrentMarket } from '../../actions/markets';\nimport { connect } from 'react-redux';\nimport { WalletButton, getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\nimport './styles.scss';\nimport { loadAccountHydroAuthentication } from '../../lib/session';\n\nconst mapStateToProps = state => {\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  return {\n    address,\n    isLocked: selectedAccount ? selectedAccount.get('isLocked') : true,\n    isLoggedIn: state.account.getIn(['isLoggedIn', address]),\n    currentMarket: state.market.getIn(['markets', 'currentMarket']),\n    markets: state.market.getIn(['markets', 'data'])\n  };\n};\n\nclass Header extends React.PureComponent {\n  componentDidMount() {\n    const { address, dispatch } = this.props;\n    const hydroAuthentication = loadAccountHydroAuthentication(address);\n    if (hydroAuthentication) {\n      dispatch(login(address));\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const { address, dispatch } = this.props;\n    const hydroAuthentication = loadAccountHydroAuthentication(address);\n    if (address !== prevProps.address && hydroAuthentication) {\n      dispatch(login(address));\n    }\n  }\n  render() {\n    const { currentMarket, markets, dispatch } = this.props;\n    return (\n      <div className=\"navbar bg-blue navbar-expand-lg\">\n        {/* <img className=\"navbar-brand\" src={require('../../images/hydro.svg')} alt=\"hydro\" /> */}\n        <strong>Kigali Crypto Trading</strong>\n        <div className=\"dropdown navbar-nav mr-auto\">\n          <button\n            className=\"btn btn-primary header-dropdown dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\">\n            {currentMarket && currentMarket.id}\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"dropdownMenuButton\"\n            style={{ maxHeight: 350, overflow: 'auto' }}>\n            {markets.map(market => {\n              return (\n                <button\n                  className=\"dropdown-item\"\n                  key={market.id}\n                  onClick={() => currentMarket.id !== market.id && dispatch(updateCurrentMarket(market))}>\n                  {market.id}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <button\n          className=\"btn btn-primary collapse-toggle\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbar-collapse\"\n          aria-expanded=\"false\">\n          <i className=\"fa fa-bars\" />\n        </button>\n        <div className=\"collapse\" id=\"navbar-collapse\">\n          <a\n            href=\"https://hydroprotocol.io/developers/docs/overview/what-is-hydro.html\"\n            className=\"btn btn-primary item\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            DOCUMENTATION\n          </a>\n          <div className=\"item\">\n            <WalletButton />\n          </div>\n\n          {this.renderAccount()}\n        </div>\n      </div>\n    );\n  }\n\n  renderAccount() {\n    const { address, dispatch, isLoggedIn, isLocked } = this.props;\n    if ((isLoggedIn && address) || isLocked) {\n      return null;\n    } else if (address) {\n      return (\n        <button className=\"btn btn-success\" style={{ marginLeft: 12 }} onClick={() => dispatch(loginRequest())}>\n          connect\n        </button>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","export const initOrderbook = (bids, asks) => {\n  return async dispatch => {\n    dispatch({\n      type: 'INIT_ORDERBOOK',\n      payload: {\n        bids,\n        asks\n      }\n    });\n  };\n};\n\nexport const updateOrderbook = (side, price, amount) => {\n  return dispatch => {\n    return dispatch({\n      type: 'UPDATE_ORDERBOOK',\n      payload: {\n        side,\n        price,\n        amount\n      }\n    });\n  };\n};\n","export const setConfigs = configs => {\n  return {\n    type: 'SET_CONFIGS',\n    payload: configs\n  };\n};\n\nexport const loadWeb3NetworkID = web3NetworkID => {\n  web3NetworkID = parseInt(web3NetworkID, 10);\n  return async (dispatch, getState) => {\n    const state = getState();\n    const oldWeb3NetworkID = state.config.get('web3NetworkID');\n\n    if (oldWeb3NetworkID === web3NetworkID) {\n      return;\n    } else if (oldWeb3NetworkID) {\n      window.location.reload();\n    }\n\n    dispatch(setConfigs({ web3NetworkID }));\n  };\n};\n","import api from '../lib/api';\nimport { getSelectedAccountWallet } from '@gongddex/hydro-sdk-wallet';\n\nexport const TRADE_FORM_ID = 'TRADE';\n\nexport const trade = (side, price, amount, orderType = 'limit', expires = 86400 * 365 * 1000) => {\n  return async (dispatch, getState) => {\n    try {\n      const result = await dispatch(createOrder(side, price, amount, orderType, expires));\n      if (result.status === 0) {\n        alert('Successfully created order');\n        return true;\n      } else {\n        alert(result.desc);\n      }\n    } catch (e) {\n      alert(e);\n    }\n\n    return false;\n  };\n};\n\nconst createOrder = (side, price, amount, orderType, expires) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const currentMarket = state.market.getIn(['markets', 'currentMarket']);\n\n    const buildOrderResponse = await api.post('/orders/build', {\n      amount,\n      price,\n      side,\n      expires,\n      orderType,\n      marketID: currentMarket.id\n    });\n\n    if (buildOrderResponse.data.status !== 0) {\n      return buildOrderResponse.data;\n    }\n\n    const orderParams = buildOrderResponse.data.data.order;\n    const { id: orderID } = orderParams;\n    try {\n      const wallet = getSelectedAccountWallet(state);\n      const signature = await wallet.signPersonalMessage(orderID);\n      const orderSignature = '0x' + signature.slice(130) + '0'.repeat(62) + signature.slice(2, 130);\n      const placeOrderResponse = await api.post('/orders', {\n        orderID,\n        signature: orderSignature,\n        method: 0\n      });\n\n      return placeOrderResponse.data;\n    } catch (e) {\n      alert(e);\n    }\n  };\n};\n\nexport const tradeUpdate = trade => {\n  return {\n    type: 'TRADE_UPDATE',\n    payload: {\n      trade\n    }\n  };\n};\n\nexport const marketTrade = trade => {\n  return {\n    type: 'MARKET_TRADE',\n    payload: {\n      trade\n    }\n  };\n};\n","import BigNumber from 'bignumber.js';\n\nexport const sleep = time => new Promise(r => setTimeout(r, time));\n\nexport const toUnitAmount = (amount, decimals) => {\n  return new BigNumber(amount).div(Math.pow(10, decimals));\n};\n\nexport const isTokenApproved = allowance => {\n  return allowance.gt(10 ** 30);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport { loadAccountHydroAuthentication } from '../../lib/session';\nimport { initOrderbook, updateOrderbook } from '../../actions/orderbook';\nimport env from '../../lib/env';\nimport { setConfigs } from '../../actions/config';\nimport { orderUpdate, watchToken, updateTokenLockedBalances } from '../../actions/account';\nimport { tradeUpdate, marketTrade } from '../../actions/trade';\nimport { sleep } from '../../lib/utils';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\n\nconst mapStateToProps = state => {\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  return {\n    address,\n    currentMarket: state.market.getIn(['markets', 'currentMarket']),\n    isLoggedIn: state.account.getIn(['isLoggedIn', address]),\n    markets: state.market.getIn(['markets', 'data'])\n  };\n};\n\nclass WebsocketConnector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.preEvents = [];\n  }\n  componentDidMount() {\n    const { currentMarket, address, isLoggedIn } = this.props;\n    this.connectWebsocket();\n    if (currentMarket) {\n      this.changeMarket(currentMarket.id);\n    }\n\n    if (address && isLoggedIn) {\n      this.changeAccount();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { address, currentMarket, isLoggedIn } = this.props;\n    const isMarketChange = currentMarket !== prevProps.currentMarket;\n    const loggedInChange = isLoggedIn !== prevProps.isLoggedIn;\n    const accountChange = address !== prevProps.address;\n\n    if (isMarketChange) {\n      const market = this.props.currentMarket;\n      this.changeMarket(market.id);\n    }\n\n    if (loggedInChange || accountChange) {\n      if (address) {\n        if (isLoggedIn) {\n          this.changeAccount();\n        } else {\n          this.logoutLastAccount();\n        }\n      } else {\n        this.logoutLastAccount();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.logoutLastAccount();\n    this.disconnectWebsocket();\n  }\n\n  render() {\n    return null;\n  }\n\n  sendMessage = message => {\n    if (!this.socket || this.socket.readyState !== 1) {\n      this.preEvents.push(message);\n      return;\n    }\n\n    this.socket.send(message);\n  };\n\n  changeMarket = marketID => {\n    if (this.lastSubscribedChannel) {\n      const m = JSON.stringify({\n        type: 'unsubscribe',\n        channels: ['Market#' + marketID]\n      });\n      this.sendMessage(m);\n    }\n\n    this.lastSubscribedChannel = marketID;\n    const message = JSON.stringify({\n      type: 'subscribe',\n      channels: ['Market#' + marketID]\n    });\n    this.sendMessage(message);\n  };\n\n  logoutLastAccount = () => {\n    const { address } = this.props;\n    if (this.lastAccountAddress) {\n      const message = JSON.stringify({\n        type: 'unsubscribe',\n        channels: ['TraderAddress#' + address]\n      });\n\n      this.sendMessage(message);\n      this.lastAccountAddress = null;\n    }\n  };\n\n  changeAccount = () => {\n    this.logoutLastAccount();\n    const { address } = this.props;\n\n    if (!address) {\n      return;\n    }\n\n    const hydroAuthentication = loadAccountHydroAuthentication(address);\n\n    if (!hydroAuthentication) {\n      return;\n    }\n\n    this.lastAccountAddress = address;\n\n    const message = JSON.stringify({\n      // type: 'accountLogin',\n      type: 'subscribe',\n      channels: ['TraderAddress#' + address]\n      // account: address,\n      // hydroAuthentication\n    });\n    this.sendMessage(message);\n  };\n\n  disconnectWebsocket = () => {\n    if (this.socket) {\n      this.socket.close();\n    }\n  };\n\n  connectWebsocket = () => {\n    const { dispatch } = this.props;\n    this.socket = new window.ReconnectingWebSocket(`${env.WS_ADDRESS}`);\n    this.socket.debug = false;\n    this.socket.timeoutInterval = 5400;\n    this.socket.onopen = async event => {\n      dispatch(setConfigs({ websocketConnected: true }));\n\n      // auto login & subscribe channel after reconnect\n      this.changeAccount();\n      if (this.lastSubscribedChannel) {\n        this.changeMarket(this.lastSubscribedChannel);\n      }\n\n      // I believe this is a chrome bug\n      // socket is not ready in onopen block?\n      while (this.socket.readyState !== 1) {\n        await sleep(30);\n      }\n      while (this.preEvents.length > 0) {\n        this.socket.send(this.preEvents.shift());\n      }\n    };\n    this.socket.onclose = event => {\n      dispatch(setConfigs({ websocketConnected: false }));\n    };\n    this.socket.onerror = event => {\n      console.log('wsError', event);\n    };\n    this.socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      const { currentMarket, address } = this.props;\n      switch (data.type) {\n        case 'level2OrderbookSnapshot':\n          if (data.marketID !== currentMarket.id) {\n            break;\n          }\n\n          const bids = data.bids.map(priceLevel => [new BigNumber(priceLevel[0]), new BigNumber(priceLevel[1])]);\n          const asks = data.asks.map(priceLevel => [new BigNumber(priceLevel[0]), new BigNumber(priceLevel[1])]);\n          dispatch(initOrderbook(bids, asks));\n          break;\n        case 'level2OrderbookUpdate':\n          if (data.marketID !== currentMarket.id) {\n            break;\n          }\n          dispatch(updateOrderbook(data.side, new BigNumber(data.price), new BigNumber(data.amount)));\n          break;\n        case 'orderChange':\n          if (data.order.marketID === currentMarket.id) {\n            dispatch(orderUpdate(data.order));\n          }\n          break;\n        case 'lockedBalanceChange':\n          dispatch(\n            updateTokenLockedBalances({\n              [data.symbol]: data.balance\n            })\n          );\n          break;\n        case 'tradeChange':\n          if (data.trade.marketID === currentMarket.id) {\n            dispatch(tradeUpdate(data.trade));\n          }\n          break;\n        case 'newMarketTrade':\n          if (data.trade.marketID !== currentMarket.id) {\n            break;\n          }\n          dispatch(marketTrade(data.trade));\n          if (address) {\n            dispatch(\n              watchToken(currentMarket.baseTokenAddress, currentMarket.baseToken, currentMarket.baseTokenDecimals)\n            );\n            dispatch(\n              watchToken(currentMarket.quoteTokenAddress, currentMarket.quoteToken, currentMarket.quoteTokenDecimals)\n            );\n          }\n          break;\n        default:\n          break;\n      }\n    };\n  };\n}\n\nexport default connect(mapStateToProps)(WebsocketConnector);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles.scss';\n\nclass OrderBook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.lastUpdatedAt = null;\n    this.forceRenderTimer = null;\n  }\n\n  // max 1 render in 1 second\n  shouldComponentUpdate() {\n    if (this.lastUpdatedAt) {\n      const diff = new Date().valueOf() - this.lastUpdatedAt;\n      const shouldRender = diff > 1000;\n\n      if (!shouldRender && !this.forceRenderTimer) {\n        this.forceRenderTimer = setTimeout(() => {\n          this.forceUpdate();\n          this.forceRenderTimer = null;\n        }, 1000 - diff);\n      }\n      return shouldRender;\n    } else {\n      return true;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.forceRenderTimer) {\n      clearInterval(this.forceRenderTimer);\n    }\n  }\n\n  componentDidUpdate() {\n    this.lastUpdatedAt = new Date();\n  }\n\n  render() {\n    let { bids, asks, websocketConnected, currentMarket } = this.props;\n\n    return (\n      <div className=\"orderbook flex-column flex-1\">\n        <div className=\"flex header text-secondary\">\n          <div className=\"col-6 text-right\">Amount</div>\n          <div className=\"col-6 text-right\">Price</div>\n        </div>\n        <div className=\"flex-column flex-1\">\n          <div className=\"asks flex-column flex-column-reverse flex-1 overflow-hidden\">\n            {asks\n              .slice(-20)\n              .reverse()\n              .toArray()\n              .map(([price, amount]) => {\n                return (\n                  <div className=\"ask flex align-items-center\" key={price.toString()}>\n                    <div className=\"col-6 orderbook-amount text-right\">\n                      {amount.toFixed(currentMarket.amountDecimals)}\n                    </div>\n                    <div className=\"col-6 text-danger text-right\">{price.toFixed(currentMarket.priceDecimals)}</div>\n                  </div>\n                );\n              })}\n          </div>\n          <div className=\"status border-top border-bottom\">\n            {websocketConnected ? (\n              <div className=\"col-6 text-success\">\n                <i className=\"fa fa-circle\" aria-hidden=\"true\" /> RealTime\n              </div>\n            ) : (\n              <div className=\"col-6 text-danger\">\n                <i className=\"fa fa-circle\" aria-hidden=\"true\" /> Disconnected\n              </div>\n            )}\n          </div>\n          <div className=\"bids flex-column flex-1 overflow-hidden\">\n            {bids\n              .slice(0, 20)\n              .toArray()\n              .map(([price, amount]) => {\n                return (\n                  <div className=\"bid flex align-items-center\" key={price.toString()}>\n                    <div className=\"col-6 orderbook-amount text-right\">\n                      {amount.toFixed(currentMarket.amountDecimals)}\n                    </div>\n                    <div className=\"col-6 text-success text-right\">{price.toFixed(currentMarket.priceDecimals)}</div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asks: state.market.getIn(['orderbook', 'asks']),\n    bids: state.market.getIn(['orderbook', 'bids']),\n    loading: false,\n    currentMarket: state.market.getIn(['markets', 'currentMarket']),\n    websocketConnected: state.config.get('websocketConnected'),\n    theme: state.config.get('theme')\n  };\n};\n\nexport default connect(mapStateToProps)(OrderBook);\n","import { setConfigs } from './config';\nimport { getTokenBalance } from '../lib/wallet';\nimport env from '../lib/env';\n\nexport let hotDiscountRules = [];\n\nexport const loadHotDiscountRules = async () => {\n  hotDiscountRules = [[5000, 1], [20000, 0.9], [100000, 0.8], [500000, 0.7], [2000000, 0.6], [-1, 0.5]];\n};\n\nexport const getHotTokenAmount = () => {\n  return async (dispatch, getState) => {\n    const hotContract = env.HYDRO_TOKEN_ADDRESS;\n    if (!hotContract) {\n      return;\n    }\n\n    const address = getState().account.get('address');\n    if (!address) {\n      return;\n    }\n    const hotTokenAmount = await getTokenBalance(hotContract, address);\n    dispatch(setConfigs({ hotTokenAmount }));\n  };\n};\n","import BigNumber from 'bignumber.js';\nimport { hotDiscountRules } from '../actions/fee';\n\n// \ba pure function to caculate all trade details\nexport const calculateTrade = ({\n  orderType,\n  side,\n  price,\n  amount,\n  hotTokenAmount,\n  gasFeeAmount,\n  asMakerFeeRate,\n  asTakerFeeRate,\n  amountDecimals,\n  priceDecimals\n}) => {\n  let tradeFee, subtotal, totalBaseTokens;\n\n  const isMakerFee = orderType === 'limit';\n  const hotDiscount = getHotDiscountRate(hotTokenAmount);\n  const feeRate = orderType === 'market' ? asTakerFeeRate : asMakerFeeRate;\n\n  if (orderType === 'market' && side === 'buy') {\n    subtotal = amount;\n    totalBaseTokens = amount.div(price).dp(amountDecimals, BigNumber.ROUND_DOWN);\n  } else {\n    subtotal = amount.multipliedBy(price).dp(priceDecimals, BigNumber.ROUND_DOWN);\n    totalBaseTokens = amount;\n  }\n\n  const estimatedPrice = orderType === 'market' ? price : new BigNumber(0);\n\n  tradeFee = subtotal.multipliedBy(feeRate);\n  const tradeFeeAfterDiscount = tradeFee.multipliedBy(hotDiscount);\n  const feeRateAfterDiscount = feeRate.multipliedBy(hotDiscount);\n  let totalQuoteTokens;\n  if (side === 'buy') {\n    totalQuoteTokens = subtotal\n      .plus(tradeFeeAfterDiscount)\n      .plus(gasFeeAmount)\n      .dp(priceDecimals, BigNumber.ROUND_UP);\n  } else {\n    totalQuoteTokens = subtotal\n      .minus(tradeFeeAfterDiscount)\n      .minus(gasFeeAmount)\n      .dp(priceDecimals, BigNumber.ROUND_UP);\n  }\n  totalQuoteTokens = BigNumber.max(totalQuoteTokens, new BigNumber('0'));\n\n  return {\n    estimatedPrice,\n    gasFeeAmount,\n    hotDiscount,\n    totalBaseTokens,\n    tradeFeeAfterDiscount,\n    feeRateAfterDiscount,\n    tradeFee,\n    feeRate,\n    isMakerFee,\n    subtotal,\n    totalQuoteTokens\n  };\n};\n\nconst getHotDiscountRate = hotTokenAmount => {\n  hotTokenAmount = hotTokenAmount.div(10 ** 18);\n  for (let rule of hotDiscountRules) {\n    const limit = new BigNumber(rule[0]);\n    const discountRate = new BigNumber(rule[1]);\n\n    if (limit.eq(-1)) {\n      return discountRate;\n    } else if (hotTokenAmount.lte(limit)) {\n      return discountRate;\n    }\n  }\n\n  return new BigNumber(1);\n};\n","import { Map } from 'immutable';\nimport BigNumber from 'bignumber.js';\n\nexport const stateUtils = {\n  getTokensInfo: (state, accountAddress) => {\n    return state.account.getIn(['tokensInfo', accountAddress], Map());\n  },\n  getTokenInfo: (state, accountAddress, tokenSymbol) => {\n    return state.account.getIn(['tokensInfo', accountAddress, tokenSymbol], Map());\n  },\n  getTokenBalance: (state, accountAddress, tokenSymbol) => {\n    return state.account.getIn(['tokensInfo', accountAddress, tokenSymbol, 'balance'], new BigNumber('0'));\n  },\n  getTokenLockedBalance: (state, accountAddress, tokenSymbol) => {\n    return state.account.getIn(['tokensInfo', accountAddress, tokenSymbol, 'lockedBalance'], new BigNumber('0'));\n  },\n  getTokenAvailableBalance: (state, accountAddress, tokenSymbol) => {\n    const balance = stateUtils.getTokenBalance(state, accountAddress, tokenSymbol);\n    const lockedBalance = stateUtils.getTokenLockedBalance(state, accountAddress, tokenSymbol);\n    return balance.minus(lockedBalance);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { formValueSelector, Field, stopSubmit } from 'redux-form';\nimport { TRADE_FORM_ID } from '../../actions/trade';\nimport { reduxForm } from 'redux-form';\nimport { trade } from '../../actions/trade';\nimport BigNumber from 'bignumber.js';\nimport { loadHotDiscountRules, getHotTokenAmount } from '../../actions/fee';\nimport { calculateTrade } from '../../lib/tradeCalculator';\nimport { loginRequest } from '../../actions/account';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport './styles.scss';\nimport { sleep, toUnitAmount } from '../../lib/utils';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\nimport { stateUtils } from '../../selectors/account';\n\nconst mapStateToProps = state => {\n  const selector = formValueSelector(TRADE_FORM_ID);\n  const bids = state.market.getIn(['orderbook', 'bids']);\n  const asks = state.market.getIn(['orderbook', 'asks']);\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  const currentMarket = state.market.getIn(['markets', 'currentMarket']);\n  const lastTrade = state.market.get('tradeHistory').first();\n  const lastPrice = lastTrade ? new BigNumber(lastTrade.price) : new BigNumber('0');\n\n  return {\n    initialValues: {\n      side: 'buy',\n      orderType: 'limit',\n      subtotal: new BigNumber(0),\n      total: new BigNumber(0),\n      totalBase: new BigNumber(0),\n      feeRate: new BigNumber(0),\n      gasFee: new BigNumber(0),\n      hotDiscount: new BigNumber(1),\n      tradeFee: new BigNumber(0),\n      estimatedPrice: new BigNumber(0),\n      marketOrderWorstPrice: new BigNumber(0),\n      marketOrderWorstTotalQuote: new BigNumber(0),\n      marketOrderWorstTotalBase: new BigNumber(0)\n    },\n    lastPrice,\n    currentMarket,\n    quoteTokenBalance: stateUtils.getTokenAvailableBalance(state, address, currentMarket.quoteToken),\n    baseTokenBalance: stateUtils.getTokenAvailableBalance(state, address, currentMarket.baseToken),\n    hotTokenAmount: state.config.get('hotTokenAmount'),\n    address,\n    isLoggedIn: state.account.getIn(['isLoggedIn', address]),\n    price: new BigNumber(selector(state, 'price') || 0),\n    amount: new BigNumber(selector(state, 'amount') || 0),\n    total: new BigNumber(selector(state, 'total') || 0),\n    totalBase: new BigNumber(selector(state, 'totalBase') || 0),\n    subtotal: new BigNumber(selector(state, 'subtotal') || 0),\n    feeRate: new BigNumber(selector(state, 'feeRate') || 0),\n    gasFee: new BigNumber(selector(state, 'gasFee') || 0),\n    estimatedPrice: new BigNumber(selector(state, 'estimatedPrice') || 0),\n    marketOrderWorstPrice: new BigNumber(selector(state, 'marketOrderWorstPrice') || 0),\n    marketOrderWorstTotalQuote: new BigNumber(selector(state, 'marketOrderWorstTotalQuote') || 0),\n    marketOrderWorstTotalBase: new BigNumber(selector(state, 'marketOrderWorstTotalBase') || 0),\n    hotDiscount: new BigNumber(selector(state, 'hotDiscount') || 1),\n    tradeFee: new BigNumber(selector(state, 'tradeFee') || 0),\n    side: selector(state, 'side'),\n    orderType: selector(state, 'orderType'),\n    bestBidPrice: bids.size > 0 ? bids.get(0)[0].toString() : null,\n    bestAskPrice: asks.size > 0 ? asks.get(asks.size - 1)[0].toString() : null\n  };\n};\n\nclass Trade extends React.PureComponent {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    loadHotDiscountRules();\n    this.interval = window.setInterval(() => {\n      dispatch(getHotTokenAmount());\n    }, 30 * 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentMarket, reset, lastPrice, price, change } = this.props;\n    if (currentMarket.id === prevProps.currentMarket.id) {\n      if (!lastPrice.eq(prevProps.lastPrice) && price.eq(0)) {\n        change('price', lastPrice);\n      }\n      this.updateFees(prevProps);\n    } else {\n      reset();\n    }\n  }\n\n  render() {\n    const { side, handleSubmit, currentMarket, total, gasFee, tradeFee, subtotal, change } = this.props;\n    if (!currentMarket) {\n      return null;\n    }\n\n    return (\n      <>\n        <div className=\"title\">\n          <div>\n            <div>{currentMarket.id}</div>\n            <div className=\"text-secondary\">Make a Limit Order</div>\n          </div>\n        </div>\n        <div className=\"trade flex-1 flex-column\">\n          <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item flex-1 flex\">\n              <div\n                className={`flex-1 tab-button text-secondary text-center${side === 'buy' ? ' active' : ''}`}\n                onClick={() => change('side', 'buy')}>\n                Buy\n              </div>\n            </li>\n            <li className=\"nav-item flex-1 flex\">\n              <div\n                className={`flex-1 tab-button text-secondary text-center${side === 'sell' ? ' active' : ''}`}\n                onClick={() => change('side', 'sell')}>\n                Sell\n              </div>\n            </li>\n          </ul>\n          <div className=\"flex flex-1 position-relative overflow-hidden\" ref={ref => this.setRef(ref)}>\n            <form\n              className=\"form flex-column text-secondary flex-1 justify-content-between\"\n              onSubmit={handleSubmit(() => this.submit())}>\n              <div>\n                <Field\n                  name=\"price\"\n                  unit={currentMarket.quoteToken}\n                  autoComplete=\"off\"\n                  component={this.renderField}\n                  label=\"Price\"\n                />\n                <Field\n                  name=\"amount\"\n                  unit={currentMarket.baseToken}\n                  autoComplete=\"off\"\n                  component={this.renderField}\n                  label=\"Amount\"\n                />\n                <div className=\"form-group\">\n                  <div className=\"form-title\">Order Summary</div>\n                  <div className=\"list\">\n                    <div className=\"item flex justify-content-between\">\n                      <div className=\"name\">Order</div>\n                      <div className=\"name\">{subtotal.toFixed(currentMarket.priceDecimals)}</div>\n                    </div>\n                    <div className=\"item flex justify-content-between\">\n                      <div className=\"name\">Fees</div>\n                      <div className=\"name\">{gasFee.plus(tradeFee).toFixed(currentMarket.priceDecimals)}</div>\n                    </div>\n                    <div className=\"item flex justify-content-between\">\n                      <div className=\"name\">Total</div>\n                      <div className=\"name\">{total.toFixed(currentMarket.priceDecimals)}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className={`form-control btn ${side === 'buy' ? 'btn-success' : 'btn-danger'}`}>\n                {side} {currentMarket.baseToken}\n              </button>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  renderField = ({ input, label, unit, meta, ...attrs }) => {\n    const { submitFailed, error } = meta;\n\n    return (\n      <div className=\"form-group\">\n        <label>{label}</label>\n        <div className=\"input-group\">\n          <input className=\"form-control\" {...input} {...attrs} />\n          <span className=\"text-secondary unit\">{unit}</span>\n        </div>\n        <span className=\"text-danger\">{submitFailed && (error && <span>{error}</span>)}</span>\n      </div>\n    );\n  };\n\n  async submit() {\n    const { amount, price, side, orderType, dispatch, isLoggedIn, address } = this.props;\n    if (!isLoggedIn) {\n      await dispatch(loginRequest(address));\n      // Metamask's window will be hidden when continuous call Metamask sign method\n      await sleep(500);\n    }\n    try {\n      await dispatch(trade(side, price, amount, orderType));\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  updateFees(prevProps) {\n    const { currentMarket, orderType, side, price, amount, hotTokenAmount, change } = this.props;\n\n    if (\n      orderType === prevProps.orderType &&\n      side === prevProps.side &&\n      price.eq(prevProps.price) &&\n      amount.eq(prevProps.amount) &&\n      hotTokenAmount.eq(prevProps.hotTokenAmount)\n    ) {\n      return;\n    }\n    const { asMakerFeeRate, asTakerFeeRate, gasFeeAmount, priceDecimals, amountDecimals } = currentMarket;\n\n    const calculateParam = {\n      orderType,\n      side,\n      price: new BigNumber(price),\n      amount: new BigNumber(amount),\n      hotTokenAmount,\n      gasFeeAmount,\n      asMakerFeeRate,\n      asTakerFeeRate,\n      amountDecimals,\n      priceDecimals\n    };\n\n    const calculateResult = calculateTrade(calculateParam);\n\n    change('subtotal', calculateResult.subtotal);\n    change('estimatedPrice', calculateResult.estimatedPrice);\n    change('totalBase', calculateResult.totalBaseTokens);\n    change('total', calculateResult.totalQuoteTokens);\n    change('feeRate', calculateResult.feeRateAfterDiscount);\n    change('gasFee', calculateResult.gasFeeAmount);\n    change('hotDiscount', calculateResult.hotDiscount);\n    change('tradeFee', calculateResult.tradeFeeAfterDiscount);\n  }\n\n  setRef(ref) {\n    if (ref) {\n      this.ps = new PerfectScrollbar(ref, {\n        suppressScrollX: true,\n        maxScrollbarLength: 20\n      });\n    }\n  }\n}\n\nconst validate = (values, props) => {\n  const { price, amount, total } = values;\n  const { side, address, currentMarket, quoteTokenBalance, baseTokenBalance } = props;\n\n  let _price, _amount, _total;\n\n  const errors = {};\n\n  if (address) {\n    if (side === 'buy') {\n      const quoteTokenAmount = toUnitAmount(quoteTokenBalance, currentMarket.quoteTokenDecimals);\n\n      if (quoteTokenAmount.eq(0)) {\n        errors.amount = `Insufficient ${currentMarket.quoteToken} balance`;\n      }\n    } else {\n      const baseTokenAmount = toUnitAmount(baseTokenBalance, currentMarket.baseTokenDecimals);\n      if (baseTokenAmount.eq(0)) {\n        errors.amount = `Insufficient ${currentMarket.baseToken} balance`;\n      }\n    }\n  }\n\n  if (!errors.price) {\n    if (!price) {\n      errors.price = 'Price required';\n    } else if (isNaN(Number(price))) {\n      errors.price = 'Price must be a number';\n    } else {\n      _price = new BigNumber(price);\n      if (_price.lte('0')) {\n        errors.price = `Price cannot be 0`;\n      }\n    }\n  }\n  if (!errors.amount) {\n    if (!amount) {\n      errors.amount = 'Amount required';\n    } else if (isNaN(Number(amount))) {\n      errors.amount = 'Amount must be a number';\n    } else {\n      _amount = new BigNumber(amount);\n\n      if (_amount.lte('0')) {\n        errors.amount = `Amount cannot be 0`;\n      } else if (_amount.multipliedBy(_price).lt(currentMarket.minOrderSize)) {\n        errors.amount = `total sale price too small`;\n      }\n    }\n  }\n\n  if (!errors.amount && !errors.price && total && address) {\n    _total = new BigNumber(total);\n    if (side === 'buy') {\n      const quoteTokenAmount = toUnitAmount(quoteTokenBalance, currentMarket.quoteTokenDecimals);\n\n      if (_total.gt(quoteTokenAmount)) {\n        errors.amount = `Insufficient ${currentMarket.quoteToken} balance`;\n      }\n    } else {\n      const baseTokenAmount = toUnitAmount(baseTokenBalance, currentMarket.baseTokenDecimals);\n\n      if (_amount.gt(baseTokenAmount)) {\n        errors.amount = `Insufficient ${currentMarket.baseToken} balance`;\n      } else if (_total.lte('0')) {\n        errors.amount = `Amount too small: total sale price less than fee`;\n      }\n    }\n  }\n  return errors;\n};\n\nconst shouldError = () => {\n  return true;\n};\nconst onSubmitFail = (_, dispatch) => {\n  setTimeout(() => {\n    dispatch(stopSubmit(TRADE_FORM_ID));\n  }, 3000);\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm({\n    form: TRADE_FORM_ID,\n    destroyOnUnmount: false,\n    onSubmitFail,\n    validate,\n    shouldError\n  })(Trade)\n);\n","import React from 'react';\nimport './styles.scss';\n\nclass Selector extends React.PureComponent {\n  render() {\n    const { options, selectedValue, handleClick } = this.props;\n    if (!options) {\n      return null;\n    }\n    return (\n      <div className=\"selector\">\n        <ul className=\"nav nav-tabs\">\n          {options.map(option => {\n            return (\n              <li\n                key={option.value}\n                className={`nav-item${selectedValue === option.value ? ' active' : ''}`}\n                onClick={() => handleClick(option)}>\n                <div className=\"text-center\">{option.name}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Selector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadTokens } from '../../actions/account';\nimport { toUnitAmount, isTokenApproved } from '../../lib/utils';\nimport { stateUtils } from '../../selectors/account';\nimport { enable, disable } from '../../lib/wallet';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\nimport { BigNumber } from 'bignumber.js';\n\nconst mapStateToProps = state => {\n  const selectedAccountID = state.WalletReducer.get('selectedAccountID');\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  return {\n    tokensInfo: stateUtils.getTokensInfo(state, address),\n    address,\n    ethBalance: toUnitAmount(state.WalletReducer.getIn(['accounts', selectedAccountID, 'balance']), 18)\n  };\n};\n\nclass Tokens extends React.PureComponent {\n  componentDidMount() {\n    const { address, dispatch } = this.props;\n    if (address) {\n      dispatch(loadTokens());\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { address, dispatch } = this.props;\n    if (address && address !== prevProps.address) {\n      dispatch(loadTokens());\n    }\n  }\n\n  render() {\n    const { dispatch, tokensInfo, ethBalance } = this.props;\n    return (\n      <div className=\"flex-column\">\n        <div className=\"token flex flex-1\">\n          <div className=\"col-6\">ETH</div>\n          <div className=\"col-6 text-right\">{ethBalance.toFixed(5)}</div>\n        </div>\n        {tokensInfo.toArray().map(([token, info]) => {\n          const { address, balance, allowance, decimals, lockedBalance } = info.toJS();\n          const isApproved = isTokenApproved(allowance);\n          const availableBalance = toUnitAmount(BigNumber.max(balance.minus(lockedBalance), '0'), decimals).toFixed(5);\n          const toolTipTitle = `<div>In-Order: ${toUnitAmount(lockedBalance, decimals).toFixed(\n            5\n          )}</div><div>Total: ${toUnitAmount(balance, decimals).toFixed(5)}</div>`;\n          return (\n            <div key={token} className=\"token flex flex-1\">\n              <div className=\"flex-column col-6\">\n                <div>{token}</div>\n                <div className=\"text-secondary\">{isApproved ? 'Enabled' : 'Disabled'}</div>\n              </div>\n              <div className=\"col-6 text-right\">\n                <div\n                  className=\"flex-column\"\n                  key={toolTipTitle}\n                  data-html=\"true\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"right\"\n                  title={toolTipTitle}\n                  ref={ref => window.$(ref).tooltip()}>\n                  {availableBalance}\n                </div>\n                <div className=\"custom-control custom-switch\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"custom-control-input\"\n                    id={address}\n                    checked={isApproved}\n                    onChange={() => {\n                      if (isApproved) {\n                        dispatch(disable(address, token, decimals));\n                      } else {\n                        dispatch(enable(address, token, decimals));\n                      }\n                    }}\n                  />\n                  <label className=\"custom-control-label\" htmlFor={address} />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Tokens);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport { wrapETH, unwrapWETH } from '../../lib/wallet';\nimport { toUnitAmount } from '../../lib/utils';\nimport { stateUtils } from '../../selectors/account';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\n\nconst mapStateToProps = state => {\n  const WETH = state.config.get('WETH');\n  const selectedAccount = getSelectedAccount(state);\n  const ethBalance = selectedAccount ? selectedAccount.get('balance') : new BigNumber('0');\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  const wethBalance = stateUtils.getTokenAvailableBalance(state, address, 'WETH');\n  return {\n    ethBalance: toUnitAmount(ethBalance, 18),\n    wethBalance: toUnitAmount(wethBalance, WETH.decimals)\n  };\n};\n\nclass Wrap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amount: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { type } = this.props;\n    if (type !== prevProps.type) {\n      this.setState({ amount: '' });\n    }\n  }\n\n  render() {\n    const { ethBalance, wethBalance, type } = this.props;\n    const { amount } = this.state;\n    const isWrap = type === 'wrap';\n\n    return (\n      <form className=\"form flex-column text-secondary flex-1 justify-content-between block\">\n        <div className=\"form-group\">\n          <label className=\"text-secondary\">\n            Amount ({isWrap ? ethBalance.toFixed(8) : wethBalance.toFixed(8)} Max)\n          </label>\n          <div className=\"input-group\">\n            <input\n              className=\"form-control\"\n              value={amount}\n              onChange={event => this.setState({ amount: event.target.value })}\n            />\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className={`form-control btn ${isWrap ? 'btn-success' : 'btn-danger'}`}\n          onClick={() => this.submit()}>\n          {type}\n        </button>\n      </form>\n    );\n  }\n\n  submit() {\n    const { dispatch, type } = this.props;\n    const { amount } = this.state;\n    if (type === 'wrap') {\n      dispatch(wrapETH(amount));\n    } else {\n      dispatch(unwrapWETH(amount));\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(Wrap);\n","import React from 'react';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport Selector from '../Selector';\nimport Tokens from './Tokens';\nimport Wrap from './Wrap';\nimport './styles.scss';\n\nconst OPTIONS = [\n  { value: 'tokens', name: 'Tokens' },\n  { value: 'wrap', name: 'Wrap' },\n  { value: 'unwrap', name: 'Unwrap' }\n];\n\nclass Wallet extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAccountID: OPTIONS[0].value\n    };\n  }\n\n  render() {\n    const { selectedAccountID } = this.state;\n    return (\n      <>\n        <div className=\"title flex justify-content-between align-items-center\">\n          <div>Wallet</div>\n          <Selector\n            options={OPTIONS}\n            selectedValue={selectedAccountID}\n            handleClick={option => {\n              this.setState({ selectedAccountID: option.value });\n            }}\n          />\n        </div>\n        <div className=\"flex-column flex-1 position-relative overflow-hidden\" ref={ref => this.setRef(ref)}>\n          {this.renderTabPanel()}\n        </div>\n      </>\n    );\n  }\n\n  renderTabPanel() {\n    const { selectedAccountID } = this.state;\n    switch (selectedAccountID) {\n      case 'tokens':\n        return <Tokens />;\n      case 'wrap':\n        return <Wrap type=\"wrap\" />;\n      case 'unwrap':\n        return <Wrap type=\"unwrap\" />;\n      default:\n        return <Tokens />;\n    }\n  }\n\n  setRef(ref) {\n    if (ref) {\n      this.ps = new PerfectScrollbar(ref, {\n        suppressScrollX: true,\n        maxScrollbarLength: 20\n      });\n    }\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { loadOrders, cancelOrder } from '../../actions/account';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\n\nconst mapStateToProps = state => {\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  return {\n    orders: state.account.get('orders'),\n    isLoggedIn: state.account.getIn(['isLoggedIn', address]),\n    currentMarket: state.market.getIn(['markets', 'currentMarket'])\n  };\n};\n\nclass OpenOrders extends React.PureComponent {\n  componentDidMount() {\n    const { isLoggedIn, dispatch } = this.props;\n    if (isLoggedIn) {\n      dispatch(loadOrders());\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoggedIn, dispatch, orders, currentMarket } = this.props;\n    if (isLoggedIn && (isLoggedIn !== prevProps.isLoggedIn || currentMarket !== prevProps.currentMarket)) {\n      dispatch(loadOrders());\n    }\n    if (orders !== prevProps.orders) {\n      this.ps && this.ps.update();\n    }\n  }\n\n  render() {\n    const { orders, dispatch, currentMarket } = this.props;\n    return (\n      <div className=\"orders flex-1 position-relative overflow-hidden\" ref={ref => this.setRef(ref)}>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"text-secondary\">\n              <th className=\"pair-column\">Pair</th>\n              <th>Side</th>\n              <th className=\"text-right\">Price</th>\n              <th className=\"text-right\">Amount</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {orders\n              .toArray()\n              .reverse()\n              .map(([id, order]) => {\n                if (order.availableAmount.eq(0)) {\n                  return null;\n                }\n                const symbol = order.marketID.split('-')[0];\n                return (\n                  <tr key={id}>\n                    <td className=\"pair-column\">{order.marketID}</td>\n                    <td className={order.side === 'sell' ? 'text-danger' : 'text-success'}>{order.side}</td>\n                    <td className=\"text-right\">{order.price.toFixed(currentMarket.priceDecimals)}</td>\n                    <td className=\"text-right\">\n                      {order.availableAmount.toFixed(currentMarket.amountDecimals)} {symbol}\n                    </td>\n                    <td className=\"text-right\">\n                      <button className=\"btn btn-outline-danger\" onClick={() => dispatch(cancelOrder(order.id))}>\n                        Cancel\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  setRef(ref) {\n    if (ref) {\n      this.ps = new PerfectScrollbar(ref, {\n        suppressScrollX: true,\n        maxScrollbarLength: 20\n      });\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(OpenOrders);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadTrades } from '../../actions/account';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { getSelectedAccount } from '@gongddex/hydro-sdk-wallet';\nimport BigNumber from 'bignumber.js';\n\nconst mapStateToProps = state => {\n  const selectedAccount = getSelectedAccount(state);\n  const address = selectedAccount ? selectedAccount.get('address') : null;\n  return {\n    address,\n    trades: state.account.get('trades'),\n    isLoggedIn: state.account.getIn(['isLoggedIn', address]),\n    currentMarket: state.market.getIn(['markets', 'currentMarket'])\n  };\n};\n\nclass Trades extends React.PureComponent {\n  componentDidMount() {\n    const { isLoggedIn, dispatch } = this.props;\n    if (isLoggedIn) {\n      dispatch(loadTrades());\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoggedIn, dispatch, trades, currentMarket } = this.props;\n    if (isLoggedIn && (isLoggedIn !== prevProps.isLoggedIn || currentMarket !== prevProps.currentMarket)) {\n      dispatch(loadTrades());\n    }\n\n    if (trades !== prevProps.trades) {\n      this.ps && this.ps.update();\n    }\n  }\n\n  render() {\n    const { trades, address, currentMarket } = this.props;\n    return (\n      <div className=\"trades flex-1 position-relative overflow-hidden\" ref={ref => this.setRef(ref)}>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"text-secondary\">\n              <th className=\"pair-column\">Pair</th>\n              <th>Side</th>\n              <th className=\"text-right\">Price</th>\n              <th className=\"text-right\">Amount</th>\n              <th className=\"text-right\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {trades\n              .toArray()\n              .reverse()\n              .map(([id, trade]) => {\n                let side;\n                if (trade.taker === address) {\n                  side = trade.takerSide;\n                } else {\n                  side = trade.takerSide === 'buy' ? 'sell' : 'buy';\n                }\n\n                let status;\n                let className = 'text-right ';\n                if (trade.status === 'successful') {\n                  status = <i className=\"fa fa-check\" aria-hidden=\"true\" />;\n                  className += 'text-success';\n                } else if (trade.status === 'pending') {\n                  status = <i className=\"fa fa-circle-o-notch fa-spin\" aria-hidden=\"true\" />;\n                } else {\n                  className += 'text-danger';\n                  status = <i className=\"fa fa-close\" aria-hidden=\"true\" />;\n                }\n                const symbol = trade.marketID.split('-')[0];\n                return (\n                  <tr key={id}>\n                    <td className=\"pair-column\">{trade.marketID}</td>\n                    <td className={`${side === 'sell' ? 'text-danger' : 'text-success'}`}>{side}</td>\n                    <td className={`text-right${side === 'sell' ? ' text-danger' : ' text-success'}`}>\n                      {new BigNumber(trade.price).toFixed(currentMarket.priceDecimals)}\n                    </td>\n                    <td className=\"text-right\">\n                      {new BigNumber(trade.amount).toFixed(currentMarket.amountDecimals)} {symbol}\n                    </td>\n                    <td className={className}>{status}</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  setRef(ref) {\n    if (ref) {\n      this.ps = new PerfectScrollbar(ref, {\n        suppressScrollX: true,\n        maxScrollbarLength: 20\n      });\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(Trades);\n","import React from 'react';\nimport OpenOrders from './OpenOrders';\nimport Trades from './Trades';\nimport Selector from '../Selector';\nimport './styles.scss';\n\nconst OPTIONS = [{ value: 'openOrders', name: 'Open' }, { value: 'filled', name: 'Filled' }];\n\nclass Orders extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAccountID: OPTIONS[0].value\n    };\n  }\n  render() {\n    const { selectedAccountID } = this.state;\n    return (\n      <>\n        <div className=\"title flex justify-content-between align-items-center\">\n          <div>\n            <div>Orders</div>\n            <div className=\"text-secondary\">View your open orders</div>\n          </div>\n          <Selector\n            options={OPTIONS}\n            selectedValue={selectedAccountID}\n            handleClick={option => {\n              this.setState({ selectedAccountID: option.value });\n            }}\n          />\n        </div>\n        {selectedAccountID === 'openOrders' ? <OpenOrders /> : <Trades />}\n      </>\n    );\n  }\n}\n\nexport default Orders;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DeepChart, TradeChart } from '@wangleiddex/hydro-sdk-charts';\n// import { testData } from './constants'; # we can use testData to show what TradeChart looks like\nimport api from '../../lib/api';\n\nclass Charts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tradeChartWrapper = React.createRef();\n\n    this.state = {\n      granularityStr: window.localStorage.getItem('granularityStr') || '1d',\n      loading: false,\n      noData: false,\n      data: [],\n      // from and to are timestamp range for fetching API\n      from: null,\n      to: null,\n      // start and end are indexes range of data to show in the screen\n      start: null,\n      end: null,\n      lastUpdatedAt: new Date().getTime() // for loadRight\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n    this.interval = window.setInterval(() => this.loadRight(), 60000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentMarket.id !== this.props.currentMarket.id) {\n      this.setState({\n        from: null,\n        to: null,\n        data: [],\n        noData: false\n      });\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  async loadRight(granularityStr = null) {\n    if (new Date().getTime() - this.state.lastUpdatedAt > 59000) {\n      this.loadData(this.state.granularityStr, this.state.to);\n    }\n  }\n\n  async loadLeft(start, end) {\n    this.loadData(this.state.granularityStr, null, this.state.from, start, end);\n  }\n\n  async loadData(granularityStr = null, from = null, to = null, start = null, end = null) {\n    const granularityIsSame = this.state.granularityStr === granularityStr;\n    if (this.state.loading || (granularityIsSame && this.state.noData)) {\n      return;\n    }\n    if (!granularityIsSame && this.state.noData) {\n      this.setState({ noData: false });\n    }\n    this.setState({ loading: true });\n\n    const params = this.generateParams(granularityStr || this.state.granularityStr, from, to);\n    if (granularityStr) {\n      this.setState({ granularityStr });\n    }\n\n    let res;\n    try {\n      res = await api.get(\n        `/markets/${this.props.currentMarket.id}/candles?from=${params.from}&to=${params.to}&granularity=${\n          params.granularityNum\n        }`\n      );\n      if (res.data.data.meta && res.data.data.meta.noData) {\n        this.setState({ loading: false, noData: true });\n        return;\n      }\n    } catch (e) {\n      this.setState({ loading: false });\n      return;\n    }\n\n    const newData = res.data.data.candles;\n    for (let i = 0; i < newData.length; i++) {\n      if (`${newData[i].time}`.length === 10) {\n        newData[i].time = newData[i].time * 1000;\n      }\n    }\n    const changeState = {\n      data: newData,\n      from: params.from,\n      to: params.to,\n      start: null,\n      end: null,\n      lastUpdatedAt: new Date().getTime()\n    };\n\n    if (granularityIsSame) {\n      if (this.state.from && this.state.from > params.from) {\n        // loadLeft\n        changeState.to = this.state.to;\n        changeState.data = [...newData, ...this.state.data];\n        changeState.start = start + newData.length;\n        changeState.end =\n          end + newData.length > start + newData.length + this.fitLengthToShow()\n            ? end + newData.length\n            : start + newData.length + this.fitLengthToShow();\n      }\n      if (this.state.to && this.state.to < params.to) {\n        // loadRight\n        changeState.from = this.state.from;\n        changeState.data = [...this.state.data, ...newData];\n      }\n    }\n\n    this.setState(changeState);\n    this.setState({ loading: false });\n  }\n\n  fitLengthToShow() {\n    const width = this.tradeChartWrapper.current.offsetWidth;\n    // ChartCanvas margin right 50;\n    // CANDLE_WIDTH_AND_GAP  is 18;\n    return Math.ceil((width - 50) / 18);\n  }\n\n  generateParams(granularityStr, from = null, to = null) {\n    let granularityNum;\n    to = to || Math.floor(new Date().getTime() / 1000);\n    switch (granularityStr) {\n      // case \"1m\":\n      //   granularityNum = 60;\n      //   from = from || to - 60 * 60 * 24 * 365 / 60; // 356 * 24 points, from 6 days ago;\n      //   break;\n      case '5m':\n        granularityNum = 60 * 5;\n        from = from || to - (60 * 60 * 24 * 365) / 12; // 356 * 24 points, from 1 month ago\n        break;\n      // case \"15m\":\n      //   granularityNum = 60 * 15;\n      //   from = from || to - 60 * 60 * 24 * 365 / 4; // 356 * 24 points, from 3 month ago\n      //   break;\n      case '1h':\n        granularityNum = 60 * 60;\n        from = from || to - 60 * 60 * 24 * 365; // 356 * 24 points, from 1 year ago\n        break;\n      // case \"6h\":\n      //   granularityNum = 60 * 60 * 6;\n      //   from = from || to - 60 * 60 * 24 * 365; // 356 * 4 points, from 1 year ago\n      //   break;\n      case '1d':\n        granularityNum = 60 * 60 * 24;\n        from = from || to - 60 * 60 * 24 * 365; // 356 points, from 1 year ago\n        break;\n      // case \"1w\":\n      //   granularityNum = 60 * 60 * 24 * 7;\n      //   from = from || to - 60 * 60 * 24 * 365; // 52 points, from 1 year ago\n      //   break;\n      // case \"1mon\":\n      //   granularityNum = 60 * 60 * 24 * 30;\n      //   from = from || to - 60 * 60 * 24 * 365; // 12 points, from 1 year ago\n      //   break;\n      default:\n        // same as 1d\n        granularityNum = 60 * 60 * 24;\n        from = from || to - 60 * 60 * 24 * 365; // 356 points, from 1 year ago\n        break;\n    }\n\n    return {\n      from,\n      to,\n      granularityNum\n    };\n  }\n\n  handleLoadMore(start, end) {\n    start = Math.ceil(start);\n    if (start === end) {\n      return;\n    }\n    this.loadLeft(start, end);\n  }\n\n  render() {\n    const bids = this.props.bids.toArray().map(priceLevel => {\n      return {\n        price: priceLevel[0].toString(),\n        amount: priceLevel[1].toString()\n      };\n    });\n    const asks = this.props.asks.toArray().map(priceLevel => {\n      return {\n        price: priceLevel[0].toString(),\n        amount: priceLevel[1].toString()\n      };\n    });\n    return (\n      <>\n        <div className=\"title flex justify-content-between align-items-center\">\n          <div>\n            <div>Charts</div>\n          </div>\n        </div>\n\n        <div className=\"flex-column flex-1 \">\n          <div className=\"grid flex-2\" ref={this.tradeChartWrapper}>\n            <TradeChart\n              theme=\"light\"\n              data={this.state.data}\n              priceDecimals={5}\n              styles={{ upColor: '#00d99f', downColor: '#ff6f75', background: '#FFFFFF' }}\n              clickCallback={result => {\n                console.log('result: ', result);\n              }}\n              handleLoadMore={result => {\n                this.handleLoadMore(result.start, result.end);\n              }}\n              clickGranularity={result => {\n                this.loadData(result.value);\n                window.localStorage.setItem('granularityStr', result.value);\n              }}\n              start={this.state.start}\n              end={this.state.end}\n            />\n          </div>\n          <div className=\"grid flex-1 border-top\">\n            <DeepChart\n              baseToken=\"HOT\"\n              quoteToken=\"DAI\"\n              styles={{ bidColor: '#00d99f', askColor: '#ff6f75', rowBackgroundColor: '#FFFFFF' }}\n              asks={asks}\n              bids={bids}\n              priceDecimals={5}\n              theme=\"light\"\n              clickCallback={result => {\n                console.log('result: ', result);\n              }}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asks: state.market.getIn(['orderbook', 'asks']),\n    bids: state.market.getIn(['orderbook', 'bids']),\n    currentMarket: state.market.getIn(['markets', 'currentMarket'])\n  };\n};\n\nexport default connect(mapStateToProps)(Charts);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport moment from 'moment';\n\nconst mapStateToProps = state => {\n  return {\n    tradeHistory: state.market.get('tradeHistory'),\n    currentMarket: state.market.getIn(['markets', 'currentMarket'])\n  };\n};\n\nclass TradeHistory extends React.PureComponent {\n  componentDidUpdate(prevProps) {\n    const { tradeHistory } = this.props;\n    if (tradeHistory !== prevProps.tradeHistory) {\n      this.ps.update();\n    }\n  }\n\n  render() {\n    const { tradeHistory, currentMarket } = this.props;\n    return (\n      <div className=\"trade-history flex-1 position-relative overflow-hidden\" ref={ref => this.setRef(ref)}>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"text-secondary\">\n              <th className=\"text-right\">Price</th>\n              <th className=\"text-right\">Amount</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tradeHistory\n              .toArray()\n              .reverse()\n              .map(([id, trade]) => {\n                const colorGreen = trade.takerSide === 'buy';\n                return (\n                  <tr key={trade.id}>\n                    <td className={['text-right', colorGreen ? 'text-success' : 'text-danger'].join(' ')}>\n                      {new BigNumber(trade.price).toFixed(currentMarket.priceDecimals)}\n                      {trade.takerSide === 'buy' ? (\n                        <i className=\"fa fa-arrow-up\" aria-hidden=\"true\" />\n                      ) : (\n                        <i className=\"fa fa-arrow-down\" aria-hidden=\"true\" />\n                      )}\n                    </td>\n                    <td className=\"text-right\">{new BigNumber(trade.amount).toFixed(currentMarket.amountDecimals)}</td>\n                    <td className=\"text-secondary\">{moment(trade.executedAt).format('HH:mm:ss')}</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  setRef(ref) {\n    if (ref) {\n      this.ps = new PerfectScrollbar(ref, {\n        suppressScrollX: true,\n        maxScrollbarLength: 20\n      });\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(TradeHistory);\n","import React from 'react';\nimport './styles.scss';\n\nexport default class UnderlineTab extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      underlineClassName: 'underline'\n    };\n    this.mounted = false;\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', () => {\n      this.forceUpdate();\n    });\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { options, selectedIndex } = this.props;\n    const optionsElements = [];\n\n    for (let i = 0; i < options.length; i++) {\n      const option = options[i];\n      optionsElements.push(\n        <div key={option.title} className={`item${i === selectedIndex ? ` active` : ''}`} onClick={option.onClick}>\n          {option.title}\n          {!this.container && i === selectedIndex ? <div className=\"defaultUnderline\" /> : null}\n        </div>\n      );\n    }\n\n    let left, width;\n\n    if (this.container) {\n      const activeItem = this.container.children[selectedIndex];\n      left = activeItem.offsetLeft;\n      width = activeItem.offsetWidth;\n    } else {\n      left = 0;\n      width = 0;\n    }\n\n    const underline = <div style={{ left, width }} className={this.state.underlineClassName} />;\n\n    return (\n      <div className=\"underlineTabContainer\" ref={this.ref}>\n        {optionsElements}\n        {underline}\n      </div>\n    );\n  }\n\n  ref = ref => {\n    if (!ref) {\n      return;\n    }\n    this.container = ref;\n    setTimeout(() => {\n      if (this.mounted) {\n        this.setState({\n          underlineClassName: 'underline transition'\n        });\n      }\n    }, 300);\n  };\n}\n","import React from 'react';\nimport UnderlineTab from '../UnderlineTab';\nimport './styles.scss';\n\nexport default class Fold extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: 0\n    };\n  }\n  render() {\n    const children = this.props.children;\n    const child = children[this.state.selectedIndex];\n    const options = [];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      options.push({\n        title: child.props['data-fold-item-title'],\n        onClick: () => {\n          this.setState({\n            selectedIndex: i\n          });\n        }\n      });\n    }\n\n    return (\n      <div className={[this.props.className, 'fold'].join(' ')}>\n        <div className=\"flod-header\">\n          <span>{this.props.title}</span>\n          <UnderlineTab options={options} selectedIndex={this.state.selectedIndex} />\n        </div>\n        {child}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadMarkets, loadTradeHistory } from './actions/markets';\nimport Header from './components/Header';\nimport WebsocketConnector from './components/WebsocketConnector';\nimport OrderBook from './components/Orderbook';\nimport Trade from './components/Trade';\nimport Wallet from './components/Wallet';\nimport Orders from './components/Orders';\nimport Charts from './components/Charts';\nimport TradeHistory from './components/TradeHistory';\nimport { HydroWallet } from '@gongddex/hydro-sdk-wallet/build/wallets';\nimport { watchWallet } from '@gongddex/hydro-sdk-wallet/build/actions/wallet';\nimport env from './lib/env';\nimport MediaQuery from 'react-responsive';\nimport Fold from './components/Fold';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { Wallet as SDKWallet } from '@gongddex/hydro-sdk-wallet';\nimport '@gongddex/hydro-sdk-wallet/index.css';\n\nconst mapStateToProps = state => {\n  const selectedAccountID = state.WalletReducer.get('selectedAccountID');\n  return {\n    selectedAccountID,\n    currentMarket: state.market.getIn(['markets', 'currentMarket']),\n    networkId: state.WalletReducer.getIn(['accounts', selectedAccountID, 'networkId'])\n  };\n};\n\nclass App extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      mobileTab: 'trade'\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch, currentMarket } = this.props;\n    dispatch(loadMarkets());\n    if (parseInt(env.NETWORK_ID) === 66) {\n      this.initTestBrowserWallet();\n    }\n    if (currentMarket) {\n      dispatch(loadTradeHistory(currentMarket.id));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentMarket, dispatch } = this.props;\n    if (currentMarket !== prevProps.currentMarket) {\n      dispatch(loadTradeHistory(currentMarket.id));\n    }\n  }\n\n  async initTestBrowserWallet() {\n    HydroWallet.setNodeUrl(env.NODE_URL);\n    const wallet = await HydroWallet.import(\n      'B7A0C9D2786FC4DD080EA5D619D36771AEB0C8C26C290AFD3451B92BA2B7BC2C',\n      '123456'\n    );\n    this.props.dispatch(watchWallet(wallet));\n  }\n\n  render() {\n    const { currentMarket, networkId, selectedAccountID } = this.props;\n    if (!currentMarket) {\n      return null;\n    }\n    return (\n      <div className=\"app\">\n        <SDKWallet title=\"Starter Kit Wallet\" nodeUrl={env.NODE_URL} defaultWalletType=\"Hydro-Wallet\" />\n        <WebsocketConnector />\n        <Header />\n        {selectedAccountID === 'EXTENSION' && parseInt(networkId, 10) !== parseInt(env.NETWORK_ID, 10) && (\n          <span className=\"network-warning bg-warning text-white text-center\" style={{ padding: 4 }}>\n            Network Error: Switch Metamask's network to {this.getNetworkName()}.\n          </span>\n        )}\n        <MediaQuery minWidth={1366}>{this.renderDesktop()}</MediaQuery>\n        <MediaQuery minWidth={1024} maxWidth={1365}>\n          {this.renderLaptop()}\n        </MediaQuery>\n        <MediaQuery minWidth={768} maxWidth={1023}>\n          {this.renderTablet()}\n        </MediaQuery>\n        <MediaQuery maxWidth={767}>{this.renderMobile()}</MediaQuery>\n      </div>\n    );\n  }\n\n  setRef(ref) {\n    if (ref) {\n      this.ps = new PerfectScrollbar(ref, {\n        suppressScrollY: true,\n        maxScrollbarLength: 20\n      });\n    }\n  }\n\n  getNetworkName() {\n    switch (parseInt(env.NETWORK_ID, 10)) {\n      case 1:\n        return 'Mainnet';\n      case 3:\n        return 'Ropsten';\n      case 4:\n        return 'Rinkeby';\n      case 66:\n        return 'localhost:8545';\n      default:\n        return 'id: ' + env.NETWORK_ID;\n    }\n  }\n\n  renderMobile() {\n    const selectTab = this.state.mobileTab;\n    let content;\n    if (selectTab === 'trade' || !selectTab) {\n      content = <Trade />;\n    } else if (selectTab === 'orders') {\n      content = <Orders />;\n    } else if (selectTab === 'charts') {\n      content = <Charts />;\n    } else if (selectTab === 'orderbook') {\n      content = (\n        <>\n          <div className=\"title\">\n            <div>\n              <div>Orderbook</div>\n              <div className=\"text-secondary\">Available Bid and Ask orders</div>\n            </div>\n          </div>\n          <OrderBook />\n        </>\n      );\n    } else if (selectTab === 'history') {\n      content = (\n        <>\n          <div className=\"title flex align-items-center\">\n            <div>Trade History</div>\n          </div>\n          <TradeHistory />\n        </>\n      );\n    } else if (selectTab === 'wallet') {\n      content = <Wallet />;\n    }\n\n    return (\n      <div className=\"flex-column flex-1 overflow-hidden\">\n        <div className=\"flex-column flex-1\">{content}</div>\n        <div className=\"flex nav-tabs overflow-hidden position-relative\" ref={ref => this.setRef(ref)}>\n          <div className=\"nav-item flex-1 border-top d-inline-block\">\n            <div\n              onClick={() => this.setState({ mobileTab: 'trade' })}\n              className={`tab-button text-secondary text-center${selectTab === 'trade' ? ' active' : ''}`}>\n              Trade\n            </div>\n          </div>\n          <div className=\"nav-item flex-1 border-top d-inline-block\">\n            <div\n              onClick={() => this.setState({ mobileTab: 'orders' })}\n              className={`tab-button text-secondary text-center${selectTab === 'orders' ? ' active' : ''}`}>\n              Orders\n            </div>\n          </div>\n          <div className=\"nav-item flex-1 border-top d-inline-block\">\n            <div\n              onClick={() => this.setState({ mobileTab: 'charts' })}\n              className={`tab-button text-secondary text-center${selectTab === 'charts' ? ' active' : ''}`}>\n              Charts\n            </div>\n          </div>\n          <div className=\"nav-item flex-1 border-top d-inline-block\">\n            <div\n              onClick={() => this.setState({ mobileTab: 'orderbook' })}\n              className={`tab-button text-secondary text-center${selectTab === 'orderbook' ? ' active' : ''}`}>\n              Orderbook\n            </div>\n          </div>\n          <div className=\"nav-item flex-1 border-top d-inline-block\">\n            <div\n              onClick={() => this.setState({ mobileTab: 'history' })}\n              className={`tab-button text-secondary text-center${selectTab === 'history' ? ' active' : ''}`}>\n              History\n            </div>\n          </div>\n          <div className=\"nav-item flex-1 border-top d-inline-block\">\n            <div\n              onClick={() => this.setState({ mobileTab: 'wallet' })}\n              className={`tab-button text-secondary text-center${selectTab === 'wallet' ? ' active' : ''}`}>\n              Wallet\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderTablet() {\n    return (\n      <div className=\"flex flex-1 overflow-hidden\">\n        <div className=\"flex-column border-right\">\n          <div className=\"grid flex-1\">\n            <Trade />\n          </div>\n        </div>\n        <div className=\"flex-column\">\n          <div className=\"flex-column flex-1\">\n            <div className=\"grid flex-1\">\n              <Charts />\n            </div>\n            <Fold className=\"border-top flex-1 flex-column\">\n              <div className=\"\" data-fold-item-title=\"Orderbook\">\n                <OrderBook />\n              </div>\n              <div className=\"\" data-fold-item-title=\"Trade History\">\n                <TradeHistory />\n              </div>\n              <div className=\"\" data-fold-item-title=\"Wallet\">\n                <Wallet />\n              </div>\n              <div className=\"\" data-fold-item-title=\"Orders\">\n                <Orders />\n              </div>\n            </Fold>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLaptop() {\n    return (\n      <div className=\"flex flex-1 overflow-hidden\">\n        <div className=\"flex-column border-right\">\n          <div className=\"grid flex-1\">\n            <Trade />\n          </div>\n        </div>\n        <Fold className=\"grid border-right flex-column\">\n          <div className=\"grid flex-column\" data-fold-item-title=\"Orderbook\">\n            <OrderBook />\n          </div>\n          <div className=\"grid flex-column\" data-fold-item-title=\"Trade History\">\n            <TradeHistory />\n          </div>\n          <div className=\"grid flex-column\" data-fold-item-title=\"Wallet\">\n            <Wallet />\n          </div>\n        </Fold>\n        <div className=\"flex-column flex-1\">\n          <div className=\"grid flex-2\">\n            <Charts />\n          </div>\n          <div className=\"grid flex-1 border-top\">\n            <Orders />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDesktop() {\n    return (\n      <div className=\"flex flex-1 overflow-hidden\">\n        <div className=\"flex\">\n          <div className=\"flex-column flex-1 border-right\">\n            <div className=\"grid flex-1\">\n              <Trade />\n            </div>\n          </div>\n          <div className=\"grid border-right flex-column\">\n            <div className=\"title\">\n              <div>\n                <div>Orderbook</div>\n                <div className=\"text-secondary\">Available Bid and Ask orders</div>\n              </div>\n            </div>\n            <OrderBook />\n          </div>\n        </div>\n        <div className=\"flex-column flex-1 border-right\">\n          <div className=\"grid flex-2\">\n            <Charts />\n          </div>\n          <div className=\"grid flex-1 border-top\">\n            <Orders />\n          </div>\n        </div>\n        <div className=\"flex-column\">\n          <div className=\"grid flex-1\">\n            <div className=\"title flex align-items-center\">\n              <div>Trade History</div>\n            </div>\n            <TradeHistory />\n          </div>\n          <div className=\"grid flex-1 border-top\">\n            <Wallet />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Map, List, OrderedMap } from 'immutable';\n\nconst initialOrderbook = Map({\n  bids: List(),\n  asks: List()\n});\n\nconst initialState = Map({\n  marketStatus: Map({\n    loaded: false,\n    loading: true,\n    data: List()\n  }),\n\n  markets: Map({\n    loaded: false,\n    loading: true,\n    data: List(),\n    currentMarket: null,\n    onlyMarket: null,\n    baseToken: 'ALL',\n    searchTerm: ''\n  }),\n\n  orderbook: initialOrderbook,\n  tickers: Map({\n    loading: false,\n    data: {}\n  }),\n\n  isAllTradesLoading: true,\n  tradeHistory: List(),\n\n  tokenPrices: Map({\n    loading: true,\n    data: {}\n  })\n});\n\nconst reverseBigNumberComparator = (a, b) => {\n  if (a[0].gt(b[0])) {\n    return -1;\n  } else if (a[0].eq(b[0])) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_MARKETS':\n      state = state.setIn(['markets', 'data'], List(action.payload.markets));\n      if (!state.getIn(['markets', 'currentMarket'])) {\n        state = state.setIn(['markets', 'currentMarket'], action.payload.markets[0]);\n      }\n      return state;\n    case 'UPDATE_CURRENT_MARKET': {\n      const currentMarket = action.payload.currentMarket;\n      const { asTakerFeeRate, asMakerFeeRate, gasFeeAmount } = currentMarket;\n      state = state.setIn(['markets', 'currentMarket'], currentMarket);\n      state = state.setIn(['markets', 'currentMarketFees'], { asTakerFeeRate, asMakerFeeRate, gasFeeAmount });\n      state = state.set('orderbook', initialOrderbook);\n      state = state.set('tradeHistory', OrderedMap());\n      return state;\n    }\n    case 'LOAD_TRADE_HISTORY':\n      state = state.set('tradeHistory', OrderedMap());\n      action.payload.reverse().forEach(t => {\n        state = state.setIn(['tradeHistory', t.id], t);\n      });\n      return state;\n    case 'MARKET_TRADE': {\n      let trade = action.payload.trade;\n      state = state.setIn(['tradeHistory', trade.id], trade);\n      return state;\n    }\n    case 'INIT_ORDERBOOK':\n      state = state.setIn(['orderbook', 'bids'], List(action.payload.bids).sort(reverseBigNumberComparator));\n      state = state.setIn(['orderbook', 'asks'], List(action.payload.asks).sort(reverseBigNumberComparator));\n      return state;\n    case 'UPDATE_ORDERBOOK':\n      const side = action.payload.side === 'buy' ? 'bids' : 'asks';\n      const { price, amount } = action.payload;\n      const index = state.getIn(['orderbook', side]).findIndex(priceLevel => priceLevel[0].eq(price));\n\n      if (index >= 0) {\n        if (amount.lte('0')) {\n          state = state.deleteIn(['orderbook', side, index]);\n        } else {\n          state = state.updateIn(['orderbook', side, index], priceLevel => [priceLevel[0], amount]);\n        }\n      } else if (amount.gt('0')) {\n        state = state.updateIn(['orderbook', side], list => list.push([price, amount]));\n      }\n\n      state = state.setIn(['orderbook', side], state.getIn(['orderbook', side]).sort(reverseBigNumberComparator));\n      return state;\n    default:\n      return state;\n  }\n};\n","import { Map, OrderedMap } from 'immutable';\nimport { BigNumber } from 'bignumber.js';\n\nexport const initState = Map({\n  isLoggedIn: Map(),\n  tokensInfo: Map(),\n  approving: Map(),\n  orders: OrderedMap(),\n  trades: OrderedMap(),\n  transactions: OrderedMap()\n});\n\nconst initialTokenInfo = Map({\n  balance: new BigNumber('0'),\n  allowance: new BigNumber('0'),\n  address: '',\n  decimals: 0,\n  lockedBalance: new BigNumber('0')\n});\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case 'UPDATE_TOKEN_LOCKED_BALANCES': {\n      const { lockedBalances, accountAddress } = action.payload;\n      for (let k of Object.keys(lockedBalances)) {\n        let tokenInfoState = state.getIn(['tokensInfo', accountAddress, k]);\n        if (!tokenInfoState) {\n          tokenInfoState = initialTokenInfo;\n        }\n        tokenInfoState = tokenInfoState.set('lockedBalance', lockedBalances[k]);\n        state = state.setIn(['tokensInfo', accountAddress, k], tokenInfoState);\n      }\n      return state;\n    }\n    case 'LOGIN':\n      state = state.setIn(['isLoggedIn', action.payload.address], true);\n      return state;\n    case 'LOGOUT':\n      state = state.setIn(['isLoggedIn', action.payload.address], false);\n      return state;\n    case 'LOAD_ORDERS':\n      state = state.set('orders', OrderedMap());\n      action.payload.orders.reverse().forEach(o => {\n        state = state.setIn(['orders', o.id], o);\n      });\n      return state;\n    case 'ORDER_UPDATE':\n      const order = action.payload.order;\n      const ordersPath = ['orders', order.id];\n\n      if (state.getIn(ordersPath)) {\n        if (order.status !== 'pending') {\n          state = state.deleteIn(ordersPath);\n        } else {\n          state = state.setIn(ordersPath, order);\n        }\n      } else if (order.status === 'pending') {\n        state = state.setIn(ordersPath, order);\n      }\n      return state;\n    case 'CANCEL_ORDER':\n      state = state.deleteIn(['orders', action.payload.id]);\n      return state;\n    case 'LOAD_TRADES':\n      state = state.set('trades', OrderedMap());\n      action.payload.trades.reverse().forEach(t => {\n        state = state.setIn(['trades', t.id], t);\n      });\n      return state;\n    case 'TRADE_UPDATE':\n      let trade = action.payload.trade;\n      state = state.setIn(['trades', trade.id], trade);\n      return state;\n    case 'UPDATE_TOKEN_INFO': {\n      const { symbol, balance, allowance, decimals, tokenAddress, accountAddress } = action.payload;\n      let tokenInfoState = state.getIn(['tokensInfo', accountAddress, symbol]);\n      if (!tokenInfoState) {\n        tokenInfoState = initialTokenInfo;\n      }\n      tokenInfoState = tokenInfoState.set('allowance', allowance);\n      tokenInfoState = tokenInfoState.set('balance', balance);\n      tokenInfoState = tokenInfoState.set('address', tokenAddress);\n      if (decimals) {\n        tokenInfoState = tokenInfoState.set('decimals', decimals);\n      }\n      state = state.setIn(['tokensInfo', accountAddress, symbol], tokenInfoState);\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport BigNumber from 'bignumber.js';\nimport env from '../lib/env';\n\nconst initialState = Map({\n  WETH: {\n    address: env.WETH_TOKEN_ADDRESS,\n    symbol: 'WETH',\n    decimals: 18\n  },\n  hotTokenAmount: new BigNumber(0),\n  websocketConnected: false\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CONFIGS':\n      for (const key of Object.keys(action.payload)) {\n        state = state.set(key, action.payload[key]);\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport market from './market';\nimport account from './account';\nimport config from './config';\nimport { WalletReducer } from '@gongddex/hydro-sdk-wallet';\n\nconst rootReducer = combineReducers({\n  market,\n  account,\n  config,\n  form: !!formReducer ? formReducer : {},\n  WalletReducer\n});\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport BigNumber from 'bignumber.js';\n\nBigNumber.config({ EXPONENTIAL_AT: 1000 });\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}